{"ast":null,"code":"import _objectSpread from \"/Users/flatironstudentaccount/Documents/Module_4/mod4_project/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/flatironstudentaccount/Documents/Module_4/mod4_project/frontend/src/context.js\";\nimport React, { Component } from 'react';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: 0,\n      cart: [],\n      modalOpen: false,\n      modalProduct: 0,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let products = [];\n      this.state.products.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        products = [...products, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: products\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.createOrderedItems = () => {};\n\n    this.createOrder = cartTotal => {\n      if (localStorage.token && localStorage.token !== \"undefined\") {\n        fetch('http://localhost:3000/orders/create', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n          },\n          body: JSON.stringify({\n            order_total: cartTotal\n          })\n        }).then(() => fetch).then(this.clearCart).then(alert(\"You placed an order!\"));\n      } else {\n        window.alert(\"Please Log In\");\n        window.location = '/login';\n      }\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/items').then(response => response.json()).then(result => {\n      this.setState(() => {\n        return {\n          products: result\n        };\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart,\n        createOrder: this.createOrder,\n        createOrderedItems: this.createOrder\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/flatironstudentaccount/Documents/Module_4/mod4_project/frontend/src/context.js"],"names":["React","Component","ProductContext","createContext","ProductProvider","state","products","detailProduct","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","tempProducts","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","createOrderedItems","createOrder","localStorage","token","fetch","method","headers","body","JSON","stringify","order_total","then","alert","window","location","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","response","json","result","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\n\nconst ProductContext = React.createContext();\n   \n\nclass ProductProvider extends Component {\n    state={\n        products: [],\n        detailProduct: 0,\n        cart: [],\n        modalOpen: false,\n        modalProduct: 0,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    }\n\n    componentDidMount() {\n        fetch('http://localhost:3000/items')\n        .then(response => response.json())\n        .then(result => {\n            this.setState(()=>{\n                return {products: result}\n            })\n        })\n    }\n\n    setProducts = () => {\n        let products = [];\n        this.state.products.forEach( item => {\n            const singleItem = {...item};\n            products = [...products, singleItem]\n        })\n        this.setState(()=> {\n            return {products: products}\n        })\n    }\n\n    getItem = (id) => {\n        const product = this.state.products.find( item => item.id === id);\n            return product\n    }\n\n    handleDetail = (id) => {\n        const product = this.getItem(id)\n        this.setState(() => {\n            return {detailProduct: product}\n        })\n    }\n\n    addToCart = (id) => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        this.setState(\n            () => {\n            return {    \n                products: tempProducts,\n                cart: [...this.state.cart, product] \n                }\n            },\n            () => {\n                this.addTotals()\n                }\n        )\n    }\n    \n    openModal = (id) => {\n        const product = this.getItem(id);\n        this.setState(()=>{\n            return {\n                modalProduct: product,\n                modalOpen: true\n            }\n        })\n    }\n\n    closeModal = () => {\n        this.setState(()=> {\n            return {\n                modalOpen: false\n            }\n        })\n    }\n\n    increment = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item=> item.id === id)\n        const index = tempCart.indexOf(selectedProduct)\n        const product = tempCart[index];\n        product.count = product.count + 1\n        product.total = product.count * product.price\n        this.setState(() => {\n            return{\n                cart: [...tempCart]\n            }\n        }, \n        ()=> {\n            this.addTotals()\n            }\n        )\n    }\n\n    decrement = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item=> item.id === id)\n        const index = tempCart.indexOf(selectedProduct)\n        const product = tempCart[index];\n        product.count = product.count - 1;\n\n        if(product.count === 0){\n            this.removeItem(id)\n        }\n        else{\n            product.total = product.count * product.price;\n            this.setState(() => {\n                return{\n                    cart: [...tempCart]\n                }\n            }, \n            ()=> {\n                this.addTotals()\n                }\n            )\n        }\n    }\n\n    removeItem = (id) => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n        tempCart = tempCart.filter(item => item.id !== id );\n        const index = tempProducts.indexOf(this.getItem(id))\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n        this.setState(\n            ()=>{\n            return {\n                cart:[...tempCart],\n                products:[...tempProducts]\n\n            }\n        }, () => {\n            this.addTotals()\n        })\n\n    }\n\n    clearCart = () => {\n        this.setState(()=> {\n            return {\n                cart: []\n            }\n        }, ()=>{\n            this.setProducts();\n            this.addTotals();\n        })\n    }\n\n    createOrderedItems = () => {}\n\n\n    createOrder = (cartTotal) => {\n        if(localStorage.token && localStorage.token !== \"undefined\"){\n        fetch('http://localhost:3000/orders/create', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n              order_total: cartTotal\n            })\n\n        })\n        .then(()=>\n            fetch\n        )\n        .then(this.clearCart)\n        .then(alert(\"You placed an order!\"))\n    }\n    else{\n        window.alert(\"Please Log In\")\n        window.location = '/login'\n        }\n}\n\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal += item.total))\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2))\n        const total = subTotal + tax\n        this.setState(()=> {\n            return {\n                cartSubTotal: subTotal,\n                cartTax: tax,\n                cartTotal: total\n            }\n        })\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetail: this.handleDetail,\n                addToCart: this.addToCart,\n                openModal: this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement: this.decrement,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart,\n                createOrder: this.createOrder,\n                createOrderedItems: this.createOrder\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer }\n"]},"metadata":{},"sourceType":"module"}